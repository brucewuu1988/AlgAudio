<collection version="1" id="base">
  <name>Base modules</name>
  <defaultlib file="base.aa"/>

  <module id="simplein" name="Simple input">
    <params>
      <outlet id="output" name="signal"/>
    </params>
    <description> System's first audio input channel is accessible with this module. </description>
    <sc>
arg outbus;
var in = SoundIn.ar(0);
Out.ar(outbus,in);
    </sc>
    <gui type="standard auto"/>
  </module>

  <module id="stereoout" name="Stereo output">
    <params>
      <inlet id="inbus1" name="left input"/>
      <inlet id="inbus2" name="right input"/>
      <param id="db" name="Volume (dB)" defaultmin="0.0" defaultmax="100.0" defaultval="85"/>
      <param id="measure" mode="output" name="Amplitude (dB)" defaultmin="0.0" defaultmax="100.0" action="custom"/>
      <reply id="amp_reply" param="measure"/>
    </params>
    <description> This module has two inlets, the audio signal connected to them will be played on the system audio output device. </description>
    <sc>
arg inbus1, inbus2, db=85, amp_reply;
var amp = (db-100).dbamp;
var in1 = In.ar(inbus1)*amp;
var in2 = In.ar(inbus2)*amp;
var signal_amp = Amplitude.ar((in1+in2)/2, 0.3, 0.3);
var signal_db = signal_amp.ampdb + 100;
Out.ar(0,in1);
Out.ar(1,in2);
SendReply.kr(Impulse.kr(30), '/algaudioSC/sendreply', signal_db, amp_reply);
    </sc>
    <gui type="standard auto"/>
  </module>

  <module id="exvco" name="Simple VCO">
    <params>
      <inlet id="inbus" name="freq input"/>
      <outlet id="outbus" name="output"/>
      <param id="base" name="Base freq" defaultmin="40.0" defaultmax="5000.0" defaultval="300" scale="log"/>
      <param id="amt" name="Mod. amount %" defaultmin="0.0" defaultmax="100.0" defaultval="20"/>
    </params>
    <description> A simple voltage controlled oscillator. </description>
    <sc>
arg inbus, outbus, base=300, amt=20;
var in = In.ar(inbus);
var freq = in*base*(amt/100)+base;
Out.ar(outbus, SinOsc.ar(freq, 0, 1));
    </sc>
    <gui type="standard auto"/>
  </module>

  <module id="lfsine1" name="Low frequency sine">
    <params>
      <outlet id="out" name="output"/>
      <param id="freq" name="Frequency" defaultmin="0.1" defaultmax="10.0" defaultval="3" scale="log"/>
      <param id="amp" name="Amplitude" defaultmin="0.0" defaultmax="1.0" defaultval="1"/>
    </params>
    <description> A simple low frequency oscillator with customizable frequency. </description>
    <sc>
arg out, freq=3, amp=1;
Out.ar(out, SinOsc.ar(freq, 0, amp));
    </sc>
    <gui type="standard auto"/>
  </module>

  <module id="lfsquare1" name="Low frequency square">
    <params>
      <outlet id="out" name="output"/>
      <param id="freq" name="Frequency" defaultmin="0.1" defaultmax="10.0" defaultval="3" scale="log"/>
      <param id="dc" name="Duty cycle" defaultmin="0.0" defaultmax="1.0" defaultval="0.5"/>
      <param id="amp" name="Amplitude" defaultmin="0.0" defaultmax="1.0" defaultval="1"/>
    </params>
    <description> A simple low frequency oscillator with customizable frequency. </description>
    <sc>
arg out, freq=3, amp=1, dc=0.5;
Out.ar(out, LFPulse.ar(freq, 0, dc, amp));
    </sc>
    <gui type="standard auto"/>
  </module>

  <module id="whitenoise" name="White noise">
    <params>
      <outlet id="out"/>
    </params>
    <description> This module emits white noise through its only outlet. </description>
    <sc>
arg out;
Out.ar(out, WhiteNoise.ar());
    </sc>
    <gui type="standard auto"/>
  </module>

  <module id="pinknoise" name="Pink noise">
    <params>
      <outlet id="out"/>
      <param id="gain" name="Gain" defaultmin="0.0" defaultmax="1.0" defaultval="0.2"/>
    </params>
    <description> This module is a pink noise source. </description>
    <sc>
arg out, gain = 0.2;
Out.ar(out, gain * PinkNoise.ar());
    </sc>
    <gui type="standard auto"/>
  </module>

  <module id="sine" name="Sine oscillator">
    <params>
      <outlet id="outbus" name="output"/>
      <param id="freq" name="Frequency" defaultmin="40.0" defaultmax="5000.0" defaultval="440.0" scale="log"/>
      <param id="amp" name="Amplitude" defaultmin="0.0" defaultmax="1.0" defaultval="1.0"/>
    </params>
    <description> A customizable sine oscillator. </description>
    <sc>
arg freq=440, amp=1, outbus;
Out.ar(outbus, SinOsc.ar(freq,0,amp));
    </sc>
    <gui type="standard auto"/>
  </module>


  <module id="square" name="Square oscillator">
    <params>
      <outlet id="outbus" name="output"/>
      <param id="freq" name="Frequency" defaultmin="40.0" defaultmax="5000.0" defaultval="440.0" scale="log"/>
      <param id="dc" name="Duty cycle" defaultmin="0.0" defaultmax="1.0" defaultval="0.5"/>
      <param id="amp" name="Amplitude" defaultmin="0.0" defaultmax="1.0" defaultval="1.0"/>
    </params>
    <description> A customizable square oscillator. </description>
    <sc>
arg freq=440, amp=1, dc=0.5, outbus;
Out.ar(outbus, Pulse.ar(freq,dc,amp));
    </sc>
    <gui type="standard auto"/>
  </module>

  <module id="saw" name="Sawtooth oscillator">
    <params>
      <outlet id="outbus" name="output"/>
      <param id="freq" name="Frequency" defaultmin="40.0" defaultmax="5000.0" defaultval="440.0" scale="log"/>
      <param id="amp" name="Amplitude" defaultmin="0.0" defaultmax="1.0" defaultval="1.0"/>
    </params>
    <description> A customizable sawtooth oscillator. </description>
    <sc>
arg freq=440, amp=1, outbus;
Out.ar(outbus, Saw.ar(freq,amp));
    </sc>
    <gui type="standard auto"/>
  </module>

  <module id="mixer4-1" name="Simple mixer">
    <params>
      <inlet id="in1"/>
      <inlet id="in2"/>
      <inlet id="in3"/>
      <inlet id="in4"/>
      <outlet id="out"/>
    </params>
    <description> A simple 4-channel mixer with no way to regulate gain. </description>
    <sc>
arg in1, in2, in3, in4, out;
Out.ar(out, In.ar(in1) + In.ar(in2) + In.ar(in3) + In.ar(in4));
    </sc>
    <gui type="standard auto"/>
  </module>

  <module id="gain1" name="Gain">
    <params>
      <inlet id="inbus" name="input"/>
      <outlet id="outbus" name="output"/>
      <param id="gain" name="Level" defaultmin="0.0" defaultmax="2.0" defaultval="1.0"/>
    </params>
    <description> Multiplies signal by a constant value. </description>
    <sc>
arg inbus, outbus, gain=1;
Out.ar(outbus, gain*In.ar(inbus));
    </sc>
    <gui type="standard auto"/>
  </module>

  <module id="pan2" name="Panorama">
    <params>
      <inlet id="inbus" name="input"/>
      <outlet id="outbus1" name="left output"/>
      <outlet id="outbus2" name="right output"/>
      <param id="dir" name="Direction" defaultmin="-1.0" defaultmax="1.0" defaultval="0.0"/>
    </params>
    <description> Distributes a single signal to two outlets. </description>
    <sc>
arg inbus, outbus1, outbus2, dir=0;
var q = 0.5pi*((dir+1)/2);
Out.ar(outbus1, cos(q)*In.ar(inbus));
Out.ar(outbus2, sin(q)*In.ar(inbus));
    </sc>
    <gui type="standard auto"/>
  </module>

  <module id="cross2" name="Crossfade">
    <params>
      <inlet id="inbus1" name="left input"/>
      <inlet id="inbus2" name="right input"/>
      <outlet id="outbus" name="output"/>
      <param id="src" name="Source" defaultmin="-1.0" defaultmax="1.0" defaultval="0.0"/>
    </params>
    <description> Outputs a balanced mixture of two input signals. </description>
    <sc>
arg inbus1, inbus2, outbus, src=0;
var q = 0.5pi*((src+1)/2);
Out.ar(outbus, (cos(q)*In.ar(inbus1)) + (sin(q)*In.ar(inbus2)));
    </sc>
    <gui type="standard auto"/>
  </module>


  <module id="exrev1" name="Example reverb">
    <params>
      <inlet id="inbus1" name="left input"/>
      <inlet id="inbus2" name="right input"/>
      <outlet id="outbus1" name="left output"/>
      <outlet id="outbus2" name="right output"/>
    </params>
    <description> A simple basic example reverb. </description>
    <sc>
arg inbus1, inbus2, outbus1, outbus2;
var sig = LocalIn.ar(4);
var input = In.ar([inbus1,inbus2]);
var delays = [0.070,0.042,0.051,0.087] - ControlDur.ir;
sig = sig * [0.73,0.7,0.72,0.78];
sig = ([[1,1,1,1],[1,-1,1,-1],[1,1,-1,-1],[1,-1,-1,1]] * sig).sum;
sig = sig/3;
sig = sig + (input ++ [0,0]);
LocalOut.ar(DelayC.ar(sig,delays,delays));
Out.ar(outbus1,sig[0]);
Out.ar(outbus2,sig[1]);
    </sc>
    <gui type="standard auto"/>
  </module>


  <module id="phaseshift" name="Phase shift">
    <params>
      <inlet id="inbus" name="input"/>
      <param id="offset" name="Offset" defaultmin="-1.0" defaultmax="1.0" defaultval="0.5"/>
      <outlet id="outbus" name="shifted output"/>
    </params>
    <description> FFT-based phase shift. </description>
    <sc>
arg inbus, outbus, offset;
var in = In.ar(inbus);
var chain = FFT(LocalBuf(2048),in);
chain = PV_PhaseShift(chain, 1pi*offset);
Out.ar(outbus,IFFT(chain));
    </sc>
    <gui type="standard auto"/>
  </module>

  <module id="midiin-ctrl" name="Midi input - control">
    <params>
      <param id="ctrl0" mode="output" name="Ctrl 0" defaultmin="0" defaultmax="127"/>
      <param id="ctrl1" mode="output" name="Ctrl 1" defaultmin="0" defaultmax="127"/>
      <param id="ctrl2" mode="output" name="Ctrl 2" defaultmin="0" defaultmax="127"/>
      <param id="ctrl3" mode="output" name="Ctrl 3" defaultmin="0" defaultmax="127"/>
      <param id="ctrl4" mode="output" name="Ctrl 4" defaultmin="0" defaultmax="127"/>
      <param id="ctrl5" mode="output" name="Ctrl 5" defaultmin="0" defaultmax="127"/>
      <param id="ctrl6" mode="output" name="Ctrl 6" defaultmin="0" defaultmax="127"/>
      <param id="ctrl7" mode="output" name="Ctrl 7" defaultmin="0" defaultmax="127"/>
    </params>
    <description> MIDI controler input is exposed via this module. </description>
    <class name="MIDICtrl"/>
    <gui type="standard auto"/>
  </module>

  <module id="midiin-note" name="Midi input - note">
    <params>
      <param id="note" mode="output" name="Frequency" defaultmin="8.17" defaultmax="12544" scale="log"/>
      <param id="velocity" mode="output" name="Velocity" defaultmin="0" defaultmax="127"/>
      <param id="gate" mode="output" name="Gate" defaultmin="0" defaultmax="1"/>
    </params>
    <description> This module is an interface for receiving MIDI note messages. </description>
    <class name="MIDINote"/>
    <gui type="standard auto"/>
  </module>

  <module id="adsr1" name="ADSR">
    <params>
      <param id="attack" name="Attack" defaultmin="0.03" defaultmax="5" defaultval="0.08" scale="log"/>
      <param id="decay" name="Decay" defaultmin="0.03" defaultmax="5" defaultval="0.2" scale="log"/>
      <param id="sustain" name="Sustain" defaultmin="0" defaultmax="1" defaultval="0.5"/>
      <param id="release" name="Release" defaultmin="0.03" defaultmax="5" defaultval="0.5" scale="log"/>
      <param id="gate" name="Gate input" defaultmin="0" defaultmax="1" defaultval="0"/>
      <param id="val" mode="output" name="Value" defaultmin="0.0" defaultmax="1.0" action="none"/>
      <reply id="val_reply" param="val"/>
      <outlet id="outbus" name="envelope out"/>
    </params>
    <description>An ADSR envelope generator.</description>
    <sc>
arg outbus, attack, decay, sustain, release, gate, val_reply;
var env = Env.adsr(attack,decay,sustain,release);
var e = EnvGen.ar(env, gate);
Out.ar(outbus, e);
SendReply.kr(Impulse.kr(30), '/algaudioSC/sendreply', e, val_reply);
    </sc>
    <gui type="standard auto"/>
  </module>

  <module id="mult" name="Mult">
    <params>
      <inlet id="in1"/>
      <inlet id="in2"/>
      <outlet id="out"/>
    </params>
    <description>Multiplies two signals values.</description>
    <sc>
arg in1, in2, out;
Out.ar(out, In.ar(in1) * In.ar(in2));
    </sc>
    <gui type="standard auto"/>
  </module>

  <module id="datalin" name="Math">
    <params>
      <param id="a" name="a" defaultmin="-1" defaultmax="1" defaultval="0" action="custom"/>
      <param id="b" name="b" defaultmin="-10" defaultmax="10" defaultval="1" action="custom"/>
      <param id="c" name="c" defaultmin="-5" defaultmax="5" defaultval="0" action="custom"/>
      <param id="d" mode="output" name="a*b+c" defaultmin="-1" defaultmax="1"/>
    </params>
    <description> Simple linear transformation of control values </description>
    <class name="DataLin"/>
    <gui type="standard auto"/>
  </module>

</collection>
