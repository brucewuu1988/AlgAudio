<collection version="1" id="debug">
  <name>Debug utilities</name>
  <defaultlib file="debug.aa"/>

  <module id="helloworld" name="Hello World!">
    <class name="HelloWorld"/>
    <description>
      A simple tiny "Hello World" module. It displays a welcome message to stdout.
      It also demonstrates multiline description.
      But it has no gui defined, so it won't do amything useful.
    </description>
  </module>

  <module id="window" name="Custom window">
    <class name="Window"/>
    <description> This module demonstrates how you can create a new window for a module. </description>
    <gui type="standard auto"/>
  </module>

  <module id="console" name="SCLang console view">
    <class name="Console"/>
    <description> This module displays a debug console window which contains all SCLang output. </description>
    <gui type="standard auto"/>
  </module>

  <module id="fork4" name="Fork   ">
    <parrams>
      <inlet id="in"/>
      <outlet id="outbus1"/>
      <outlet id="outbus2"/>
      <outlet id="outbus3"/>
      <outlet id="outbus4"/>
    </parrams>
    <description> A simple fork with 4 outlets. </description>
    <sc>
arg in, outbus1, outbus2, outbus3, outbus4;
Out.ar(outbus1, In.ar(in));
Out.ar(outbus2, In.ar(in));
Out.ar(outbus3, In.ar(in));
Out.ar(outbus4, In.ar(in));
    </sc>
    <gui type="standard auto"/>
  </module>

  <module id="pipe" name="Pipe">
    <parrams>
      <inlet id="inbus"/>
      <outlet id="outbus"/>
    </parrams>
    <description> A pipe module. All signal passed throught this module is left untouched. </description>
    <sc>
arg inbus, outbus;
var in = In.ar(inbus);
Out.ar(outbus,in);
    </sc>
    <gui type="standard auto"/>
  </module>

  <module id="measure" name="Amp measure">
    <class name="Measure"/>
    <parrams>
      <inlet id="inbus"/>
      <parram id="resultparram" name="Amplitude" min="0.0" max="100.0" action="custom"/>
      <reply id="result" parram="result"/>
    </parrams>
    <description> This class demonstrates reacting on signal analysis results. </description>
    <sc>
arg inbus, result=42;
var in = In.ar(inbus);
var amp = Amplitude.kr(in);
SendReply.kr(Impulse.kr(10), '/algaudioSC/sendreply', amp, result);
    </sc>
    <gui type="standard auto"/>
  </module>


  <module id="guidemo" name="GUI demo">
    <class name="GUIDemo"/>
    <parrams>
      <inlet id="inbus"/>
      <parram id="gain" defaultval="1.0" action="sc"/>
      <parram id="stdout" defaultval="0.0" action="custom"/>
      <outlet id="outbus"/>
    </parrams>
    <description> Custom GUI demo. </description>
    <sc>
arg inbus, outbus, gain;
var in = In.ar(inbus);
Out.ar(outbus, gain*in);
    </sc>
    <gui type="standard">
      <inlet id="inbusGUI" inlet="inbus"/>
      <slider id="gainslider" parram="gain" name="Gain 1" defaultmin="0.0" defaultmax="1.0"/>
      <slider id="gainslider2" parram="gain" name="Gain 2" defaultmin="1.0" defaultmax="5.0"/>
      <slider id="stdoutslider" parram="stdout" name="C stdout" defaultmin="-10.0" defaultmax="10.0"/>
      <display id="displaydemo" name="Result display" defaultmin="-100.0" defaultmax="100.0"/>
      <outlet id="outbus"/>
    </gui>
  </module>

</collection>
