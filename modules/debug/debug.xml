<collection version="1" id="debug">
  <name>Debug utilities</name>
  <defaultlib file="debug.aa"/>

  <module id="helloworld" name="Hello World!">
    <class name="HelloWorld"/>
    <description>
      A simple tiny "Hello World" module. It displays a welcome message to stdout.
      It also demonstrates multiline description.
      But it has no gui defined, so it won't do amything useful.
    </description>
  </module>

  <module id="window" name="Custom window">
    <class name="Window"/>
    <description> This module demonstrates how you can create a new window for a module. </description>
    <gui type="standard auto"/>
  </module>

  <module id="console" name="SCLang console view">
    <class name="Console"/>
    <description> This module displays a debug console window which contains all SCLang output. </description>
    <gui type="standard auto"/>
  </module>

  <module id="pipe" name="Pipe">
    <params>
      <inlet id="inbus" name="in"/>
      <outlet id="outbus" name="out"/>
    </params>
    <description> A pipe module. All signal passed throught this module is left untouched. </description>
    <sc>
arg inbus, outbus;
var in = In.ar(inbus);
Out.ar(outbus,in);
    </sc>
    <gui type="standard auto"/>
  </module>

  <module id="measure" name="Amp measure">
    <params>
      <inlet id="inbus" name="signal"/>
      <param id="resultparam" mode="output" name="Amplitude" defaultmin="0.0" defaultmax="1.0" action="custom"/>
      <reply id="result" param="resultparam"/>
    </params>
    <description> This class demonstrates reacting on signal analysis results. </description>
    <sc>
arg inbus, result;
var in = In.ar(inbus);
var amp = Amplitude.ar(in, 0.2, 0.2);
SendReply.kr(Impulse.kr(20), '/algaudioSC/sendreply', amp, result);
    </sc>
    <gui type="standard auto"/>
  </module>

  <module id="value" name="Signal value">
    <params>
      <inlet id="inbus" name="signal"/>
      <param id="value" mode="output" name="Value" defaultmin="-1.0" defaultmax="1.0"/>
      <reply id="valreply" param="value"/>
    </params>
    <description> This module converts audio signal to control stream. </description>
    <sc>
arg inbus, valreply;
var in = In.ar(inbus);
SendReply.kr(Impulse.kr(20), '/algaudioSC/sendreply', in, valreply);
    </sc>
    <gui type="standard auto"/>
  </module>

  <module id="guidemo" name="GUI demo">
    <class name="GUIDemo"/>
    <params>
      <inlet id="inbus" name="input"/>
      <param id="gain" defaultval="1.0" defaultmin="0.0" defaultmax="3.0" action="sc"/>
      <param id="stdout" defaultval="0.0" defaultmin="-10.0" defaultmax="10.0" action="custom"/>
      <param id="stdout2" defaultval="0.0" action="none" defaultmin="-100.0" defaultmax="100.0"/>
      <outlet id="outbus" name="output"/>
    </params>
    <description> Custom GUI demo. </description>
    <sc>
arg inbus, outbus, gain;
var in = In.ar(inbus);
Out.ar(outbus, gain*in);
    </sc>
    <gui type="standard">
      <inlet id="inbusGUI" inlet="inbus" name="INPUT"/>
      <slider id="gainslider" param="gain" name="Gain 1"/>
      <slider id="stdoutslider" param="stdout" name="C stdout"/>
      <display id="displaydemo" param="stdout2" name="Result display"/>
      <outlet id="outbus" name="OUTPUT"/>
    </gui>
  </module>

</collection>
